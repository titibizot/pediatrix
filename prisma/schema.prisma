generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String?
  email        String?       @unique
  password     String?
  createdAt    DateTime      @default(now())
  gameSessions GameSession[]
}

model Disease {
  id                String        @id @default(uuid())
  name              String        @unique
  keywords          String[]
  synonyms          Json? // Objet JSON : { [keyword: string]: string[] }
  startingKeyword   String?
  keywordsembedding Json?
  link              String?
  specialties       Specialty[]   @relation("DiseaseSpecialties")
  gameSessions      GameSession[]
}

model GameSession {
  id                 String              @id @default(uuid())
  user               User?               @relation(fields: [userId], references: [id])
  userId             String?
  diseaseId          String
  disease            Disease             @relation(fields: [diseaseId], references: [id])
  mode               String // "challenge" ou "libre"
  success            Boolean             @default(false)
  timeSpent          Int?
  createdAt          DateTime            @default(now())
  trainingYear       String
  keywordSubmissions KeywordSubmission[]
}

model Specialty {
  id       String    @id @default(uuid())
  name     String    @unique
  diseases Disease[] @relation("DiseaseSpecialties")
}

model KeywordSubmission {
  id            String      @id @default(uuid())
  gameSessionId String
  keyword       String
  createdAt     DateTime    @default(now())
  gameSession   GameSession @relation(fields: [gameSessionId], references: [id])
}

enum TrainingYear {
  DFGSM
  DFASM1
  DFASM2
  DFASM3
  INTERNES
  DOCTEUR
  AUTRE
}
